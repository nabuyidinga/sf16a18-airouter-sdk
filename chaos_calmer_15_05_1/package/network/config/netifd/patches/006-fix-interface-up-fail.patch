Index: netifd-2015-12-16/device.c
===================================================================
--- netifd-2015-12-16.orig/device.c	2016-06-07 12:18:47.000000000 +0800
+++ netifd-2015-12-16/device.c	2018-08-01 10:28:02.672269239 +0800
@@ -317,6 +317,8 @@
 	safe_list_for_each(&dev->users, device_broadcast_cb, &dev_ev);
 }
 
+#define SET_IFINDEX_RETRY 10
+
 int device_claim(struct device_user *dep)
 {
 	struct device *dev = dep->dev;
@@ -326,7 +328,7 @@
 		return 0;
 
 	dep->claimed = true;
-	D(DEVICE, "Claim %s %s, new active count: %d\n", dev->type->name, dev->ifname, dev->active + 1);
+	D(DEVICE, "Claim %s %s, new active count: %d external=%d\n", dev->type->name, dev->ifname, dev->active + 1,(int)dev->external);
 	if (++dev->active != 1)
 		return 0;
 
@@ -339,13 +341,20 @@
 			ret = -1;
 
 		system_if_get_settings(dev, &dev->orig_settings);
-	} else
-		ret = dev->set_state(dev, true);
+	} else{
+		int retry_cnt = SET_IFINDEX_RETRY;
+		ret = -1;
+		while(retry_cnt > 0 && ret){
+			ret = dev->set_state(dev, true);
+			retry_cnt--;
+		}
+		D(DEVICE, "set_state %s %s ret=%d retry=%d\n", dev->type->name, dev->ifname, ret, SET_IFINDEX_RETRY - retry_cnt);
+	}
 
 	if (ret == 0)
 		device_broadcast_event(dev, DEV_EVENT_UP);
 	else {
-		D(DEVICE, "claim %s %s failed: %d\n", dev->type->name, dev->ifname, ret);
+		D(DEVICE, "claim %s %s failed: %d ifindex=%d\n", dev->type->name, dev->ifname, ret,dev->ifindex);
 		dev->active = 0;
 		dep->claimed = false;
 	}
