# This file is interpreted as shell script.
# Put your custom iptables rules here, they will
# be executed with each firewall (re-)start.

# Internal uci firewall chains are flushed and recreated on reload, so
# put custom rules into the root chains e.g. INPUT or FORWARD or into the
# special user chains, e.g. input_wan_rule or postrouting_lan_rule.
sleep 1
test_result=`iptables -nL |grep "^zone_lan_input"`
uci_result=`uci show firewall |grep input`
# echo "test result is $test_result" >> /etc/got_error
# echo "================================================" >> /etc/got_error
# echo "uci result is $uci_result" >> /etc/got_error
# echo "================================================" >> /etc/got_error
if [ -z "$test_result" ]; then
# 	echo "got error and reload firewall" >> /etc/got_error
# 	echo "================================================" >> /etc/got_error
	fw3 reload&
fi
#init UPLOAD DOWNLOAD
#speed start
#acl rules
lan=$(uci get network.lan.ipaddr)
server=$(uci -q get sicloud.leaseserver.ip)
port=$(uci -q get sicloud.leaseserver.port)
httpsport=$(uci -q get sicloud.leaseserver.httpsport)
test_forward_var=`iptables -L |grep forwardvar`
test_input_var=`iptables -L -t mangle|grep inputvar`
if [ -z "$test_forward_var" ]; then
	iptables -I forwarding_rule -m set --match-set forwardvar src -j DROP
	iptables -N lease_block
	iptables -I forwarding_rule -i br-lease -m set --match-set leaseblock src -j lease_block
	iptables -I lease_block -p tcp --dport 80 -m string --algo bm --string 'generate_204' -j DROP
fi
if [ -z "$test_input_var" ]; then
	iptables -t mangle -I PREROUTING -m set --match-set inputvar src -j DROP
fi

test_url_mac=`iptables -L -t nat|grep urllist_mac`
if [ -z "$test_url_mac" ]; then
iptables -t nat -I zone_lan_prerouting -p udp --dport 53 -m set --match-set urllist_mac src -j DNAT --to-destination 127.0.0.1:53
iptables -t nat -I zone_lan_prerouting -p tcp --dport 53 -m set --match-set urllist_mac src -j DNAT --to-destination 127.0.0.1:53
fi

#make sure all prerouting lease rule in here, and rule about passing request target is lan ip is NO.1
test_lforward_var=`iptables -L | grep lforward`
if [ -z "$test_lforward_var" ]; then
	iptables -A forwarding_lease_rule -p udp --dport 53 -m set --match-set leaseblock src -j DROP
	iptables -A forwarding_lease_rule -m set ! --match-set lforward src -j ACCEPT
	iptables -A forwarding_lease_rule -m set --match-set serverip dst -j ACCEPT
	iptables -A forwarding_lease_rule -p all -j DROP
	iptables -I input_rule -m set --match-set lforward src -j lease_block
	iptables -t nat -A prerouting_lease_rule -d ${lan}/32 -j ACCEPT
	iptables -t nat -A prerouting_lease_rule -p tcp --dport 80 -m set --match-set lforward src -m set ! --match-set serverip dst -j DNAT --to-destination $server:$port
	iptables -t nat -A prerouting_lease_rule -p tcp --dport 443 -m set --match-set lforward src -m set ! --match-set serverip dst -j DNAT --to-destination $server:$httpsport
else
	iptables -t nat -R prerouting_lease_rule 1 -d ${lan}/32 -j ACCEPT
fi
