--- a/configure.ac
+++ b/configure.ac
@@ -143,10 +143,12 @@ AC_ARG_ENABLE(
 	[enable_ntfsprogs="yes"]
 )
 
-AC_ARG_ENABLE(crypto,
-	AS_HELP_STRING(--enable-crypto,enable crypto related code and utilities
-		       (default=no)), ,
-	enable_crypto=no
+AC_ARG_ENABLE(
+	[crypto],
+	[AS_HELP_STRING([--enable-crypto],[enable crypto related code and utilities
+		       (default=no)])],
+	,
+	[enable_crypto="no"]
 )
 
 AC_ARG_ENABLE(
@@ -301,7 +303,7 @@ elif test "${with_fuse}" = "external"; t
 	fi
 	test "x${PKG_CONFIG}" = "xno" && AC_MSG_ERROR([pkg-config wasn't found! Please install from your vendor, or see http://pkg-config.freedesktop.org/wiki/])
 	# Libraries often install their metadata .pc files in directories
-	# not searched by pkg-config. Let's workaround this. 
+	# not searched by pkg-config. Let's workaround this.
 	export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/lib/pkgconfig:/usr/lib/pkgconfig:/opt/gnome/lib/pkgconfig:/usr/share/pkgconfig:/usr/local/lib/pkgconfig:$prefix/lib/pkgconfig:/opt/gnome/share/pkgconfig:/usr/local/share/pkgconfig
 	PKG_CHECK_MODULES(
 		[FUSE_MODULE],
@@ -318,14 +320,19 @@ fi
 compile_crypto=false
 if test "$enable_crypto" != "no"; then
 	have_libgcrypt=false
-	AM_PATH_LIBGCRYPT(1.2.2, [ have_libgcrypt=true ],
+	m4_define([AM_PATH_LIBGCRYPT_FAIL],
+			  [{ test "x$have_gcrypt" != xyes || AC_MSG_ERROR([*** GCRYPT headers not found.]); }]
+			  )
+	m4_ifdef([AM_PATH_LIBGCRYPT],[AM_PATH_LIBGCRYPT(1.2.2, [ have_libgcrypt=true ],
 	[
 		if test "$enable_crypto" = "yes"; then
 			AC_MSG_ERROR([ntfsprogs crypto code requires the gcrypt library.])
 		else
 			AC_MSG_WARN([ntfsprogs crypto code requires the gcrypt library.])
 		fi
-	])
+	])],
+	[AM_PATH_LIBGCRYPT_FAIL]
+	)
 	have_libgnutls=false
 	PKG_CHECK_MODULES(GNUTLS, gnutls >= 1.4.4, [ have_libgnutls=true ],
 		if test "$enable_crypto" = "yes"; then
@@ -569,8 +576,8 @@ fi
 # Settings
 pkgconfigdir="\$(libdir)/pkgconfig"
 ntfs3gincludedir="\$(includedir)/ntfs-3g"
-# Executables should be installed to the root filesystem, otherwise 
-# automounting NTFS volumes can fail during boot if the driver binaries 
+# Executables should be installed to the root filesystem, otherwise
+# automounting NTFS volumes can fail during boot if the driver binaries
 # and their dependencies are on an unmounted partition. Use --exec-prefix
 # to override this.
 if test "x${exec_prefix}" = "xNONE"; then
@@ -669,4 +676,3 @@ EOF
 fi
 
 echo "You can type now 'make' to build ntfs-3g."
-
